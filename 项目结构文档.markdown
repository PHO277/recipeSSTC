# 智能食谱生成器项目结构文档

## 目录结构
```
recipe_generator/
├── app.py                    # 主应用入口，协调页面渲染
├── config/
│   └── page_config.py       # 页面配置和CSS样式
├── components/
│   ├── auth.py             # 用户认证（登录/注册）功能
│   ├── sidebar.py          # 侧边栏（语言选择、用户信息、快速操作）
│   ├── home.py             # 未登录用户的主页
│   ├── generate_recipe.py  # 食谱生成页面
│   ├── my_recipes.py       # 用户食谱管理页面
│   ├── discover.py         # 发现食谱页面（占位）
│   ├── statistics.py       # 用户食谱统计页面
│   ├── settings.py         # 用户设置页面
│   └── footer.py           # 页脚组件
├── utils/
│   └── session.py          # 会话状态初始化和项目路径配置
```

## 文件功能描述与接口

### 1. app.py
**功能描述**：
- 项目的主入口，负责协调整个应用的渲染流程。
- 根据用户登录状态渲染主页或带标签页的已登录界面。
- 调用其他模块的渲染函数，组织页面结构。


### 2. config/page_config.py
**功能描述**：
- 配置Streamlit页面的基本设置（如标题、图标、布局）。
- 定义并加载全局CSS样式和JavaScript代码，用于美化界面和添加交互效果。

**使用的接口**：
- **Streamlit**：`st.set_page_config`, `st.markdown`

### 3. utils/session.py
**功能描述**：
- 初始化Streamlit会话状态，包括MongoDB连接、用户登录状态、用户名、用户数据和语言设置。
- 配置项目路径以支持模块导入。

**使用的接口**：
- **Streamlit**：`st.session_state`, `st.error`, `st.stop`
- **os**：`os.getenv`
- **pathlib**：`Path`
- **sys**：`sys.path.append`
- **mongodb_manager**：`MongoDBManager`

### 4. components/auth.py
**功能描述**：
- 实现用户认证功能，包括登录和注册界面及逻辑。
- 处理用户登录、注册、演示账号登录，并更新会话状态。

**使用的接口**：
- **Streamlit**：`st.markdown`, `st.radio`, `st.form`, `st.text_input`, `st.columns`, `st.form_submit_button`, `st.success`, `st.error`, `st.info`, `st.balloons`, `st.rerun`, `st.session_state`
- **utils.translations**：`get_translation`
- **mongodb_manager**：`verify_user`, `create_user`, `get_user`

### 5. components/sidebar.py
**功能描述**：
- 渲染侧边栏，包括语言选择、用户信息展示、用户统计和快速操作按钮。
- 根据登录状态显示认证界面或用户信息。

**使用的接口**：
- **Streamlit**：`st.sidebar`, `st.markdown`, `st.selectbox`, `st.columns`, `st.metric`, `st.button`, `st.caption`, `st.rerun`, `st.session_state`
- **datetime**：`datetime`, `datetime.utcnow`, `datetime.fromisoformat`
- **utils.translations**：`get_translation`, `LANGUAGES`
- **components.auth**：`render_auth`
- **mongodb_manager**：`update_user_language`, `get_recipe_statistics`

### 6. components/home.py
**功能描述**：
- 为未登录用户渲染主页，展示应用标题、副标题、功能介绍卡片和登录提示。
- 提供静态内容，鼓励用户登录以使用完整功能。

**使用的接口**：
- **Streamlit**：`st.markdown`, `st.columns`, `st.info`
- **utils.translations**：`get_translation`

### 7. components/generate_recipe.py
**功能描述**：
- 实现食谱生成页面，允许用户输入食材、饮食偏好、健康目标等参数，生成食谱并显示营养信息。
- 支持“手气不错”随机食材功能、食谱保存、下载和分享（占位）。

**使用的接口**：
- **Streamlit**：`st.columns`, `st.markdown`, `st.form`, `st.text_area`, `st.selectbox`, `st.select_slider`, `st.number_input`, `st.form_submit_button`, `st.spinner`, `st.success`, `st.error`, `st.info`, `st.warning`, `st.balloons`, `st.slider`, `st.text_input`, `st.download_button`, `st.session_state`
- **os**：`os.getenv`
- **datetime**：`datetime`
- **random**：`random.choice`
- **llm_interface**：`LLMInterface.generate_recipe_and_nutrition`
- **nutrition_analyzer**：`NutritionAnalyzer.parse_nutrition`
- **utils.translations**：`get_translation`
- **mongodb_manager**：`save_recipe`

### 8. components/my_recipes.py
**功能描述**：
- 显示用户保存的食谱，支持搜索、排序和筛选。
- 提供食谱的查看、删除和分享（占位）功能。

**使用的接口**：
- **Streamlit**：`st.markdown`, `st.columns`, `st.text_input`, `st.selectbox`, `st.info`, `st.expander`, `st.button`, `st.success`, `st.rerun`, `st.session_state`
- **datetime**：`datetime`, `datetime.fromisoformat`
- **utils.translations**：`get_translation`
- **mongodb_manager**：`search_recipes`, `get_user_recipes`, `delete_recipe`

### 9. components/discover.py
**功能描述**：
- 占位模块，用于展示社区食谱或推荐食谱（功能待实现）。
- 当前仅显示“即将推出”提示。

**使用的接口**：
- **Streamlit**：`st.markdown`, `st.info`
- **utils.translations**：`get_translation`

### 10. components/statistics.py
**功能描述**：
- 显示用户的食谱统计信息，包括总食谱数、平均评分、最常用饮食类型和本月食谱数。
- 展示最近食谱和热门标签，提供简单的趋势分析。

**使用的接口**：
- **Streamlit**：`st.markdown`, `st.columns`, `st.metric`, `st.info`, `st.button`, `st.rerun`, `st.session_state`
- **datetime**：`datetime`, `datetime.fromisoformat`
- **collections**：`Counter`
- **utils.translations**：`get_translation`
- **mongodb_manager**：`get_recipe_statistics`, `get_user_recipes`, `get_user_recipes_by_month`

### 11. components/footer.py
**功能描述**：
- 渲染页面底部的页脚，包含版权信息、隐私政策、条款服务和联系链接。
- 可复用于所有页面。

**使用的接口**：
- **Streamlit**：`st.markdown`, `st.columns`
- **utils.translations**：`get_translation`

